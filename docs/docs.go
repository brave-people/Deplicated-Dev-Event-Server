// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/admin/users": {
            "get": {
                "security": [
                    {
                        "userAPIKey": []
                    }
                ],
                "description": "Get all users info",
                "tags": [
                    "Admin - Users"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/responses.Users"
                            }
                        }
                    },
                    "401": {},
                    "404": {},
                    "500": {}
                }
            }
        },
        "/v1/admin/users/:userID": {
            "get": {
                "security": [
                    {
                        "userAPIKey": []
                    }
                ],
                "description": "회원 정보 조회",
                "tags": [
                    "Admin - Users"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "userID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Users"
                        }
                    },
                    "401": {},
                    "404": {},
                    "500": {}
                }
            },
            "put": {
                "security": [
                    {
                        "userAPIKey": []
                    }
                ],
                "description": "회원 정보 수정",
                "tags": [
                    "Admin - Users"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "userID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Users"
                        }
                    },
                    "400": {},
                    "401": {},
                    "404": {},
                    "500": {}
                }
            },
            "delete": {
                "security": [
                    {
                        "userAPIKey": []
                    }
                ],
                "description": "회원 정보 삭제",
                "tags": [
                    "Admin - Users"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "userID",
                        "name": "userID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Message"
                        }
                    },
                    "401": {},
                    "404": {},
                    "500": {}
                }
            }
        },
        "/v1/auth/login": {
            "post": {
                "description": "로그인",
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "description": "로그인",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.Login"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/requests.Login"
                        }
                    },
                    "401": {},
                    "500": {}
                }
            }
        },
        "/v1/auth/register": {
            "post": {
                "description": "회원가입",
                "tags": [
                    "Auth"
                ],
                "parameters": [
                    {
                        "description": "register user",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/requests.RegisterUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/responses.Message"
                        }
                    },
                    "400": {},
                    "500": {}
                }
            }
        },
        "/v1/events/:eventID": {
            "get": {
                "security": [
                    {
                        "userAPIKey": []
                    }
                ],
                "description": "이벤트 정보 조회",
                "tags": [
                    "Event"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "eventID",
                        "name": "eventID",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Event"
                        }
                    },
                    "401": {},
                    "404": {},
                    "500": {}
                }
            }
        },
        "/v1/users": {
            "get": {
                "security": [
                    {
                        "userAPIKey": []
                    }
                ],
                "description": "나의 프로필 확인",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Users"
                        }
                    },
                    "401": {},
                    "500": {}
                }
            },
            "put": {
                "security": [
                    {
                        "userAPIKey": []
                    }
                ],
                "description": "프로필 수정",
                "tags": [
                    "Users"
                ],
                "parameters": [
                    {
                        "type": "string",
                        "description": "email",
                        "name": "email",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/responses.Message"
                        }
                    },
                    "401": {},
                    "404": {},
                    "500": {}
                }
            }
        }
    },
    "definitions": {
        "models.Event": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                },
                "tages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Tag"
                    }
                }
            }
        },
        "models.Tag": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "requests.Login": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "requests.RegisterUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "responses.Message": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "responses.Users": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "nickname": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "Dev Event Server",
	Description: "Dev Event API",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
